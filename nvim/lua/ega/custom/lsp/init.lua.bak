local lsp_zero = _G.call("lsp-zero")
if not lsp_zero then
	return
end
lsp_zero = lsp_zero.preset({})

local lspconfig = _G.call("lspconfig")
if not lspconfig then
	return
end

local lspconfig_utils = require("lspconfig/util")

lsp_zero.ensure_installed({
	"clangd",
	"lua_ls",
})

lsp_zero.on_attach(function(client, bufnr)
	lsp_zero.default_keymaps({ buffer = bufnr })
	lsp_zero.buffer_autoformat()
	local opts = { buffer = bufnr }
	vim.keymap.set({ "n", "x" }, "gq", function()
		vim.lsp.buf.format({ async = false, timeout_ms = 100000 })
	end, opts)
end)

lsp_zero.set_sign_icons({
	error = "✘",
	hint = "▲",
	warn = "⚑",
	info = "»",
})

vim.filetype.add({
	extension = {
		tpp = "cpp",
		vert = "cpp",
		frag = "cpp",
	},
	pattern = {
		[".*.tpp"] = "cpp",
		[".*.vert"] = "cpp",
		[".*.frag"] = "cpp",
	},
})

vim.lsp.set_log_level("debug")

lspconfig.lua_ls.setup(lsp_zero.nvim_lua_ls())
--lspconfig.clangd.setup(require("ega.custom.lsp.settings.clangd"))
--lsp_zero.skip_server_setup({ "clangd" })

lsp_zero.setup()

require("clangd_extensions").setup({
	server = require("ega.custom.lsp.settings.clangd"),
})

require("ega.custom.lsp.null_ls")
